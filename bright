#!/bin/bash
# ******************************************************************************
# 
# Name:    bright
# Author:  Gabriel Gonzalez
# Email:   gabeg@bu.edu
# License: The MIT License (MIT)
# 
# Syntax: bright [options] [args]
# 
# Description: Control and display the screen brightness.
# 
# Notes: None.
# 
# ******************************************************************************

# Globals
PROG="${0##*/}"
PROGDIR=$(dirname "$(readlink -f "${0}")")
BRIGHTDIR="/sys/class/backlight/intel_backlight"

# Options
VERBOSE=

# Source utility
. "${PROGDIR}"/../lib/bash/util.sh

# Exit statuses
STATUS_NORMAL=0
STATUS_GETOPT=1
STATUS_ARGS=2
STATUS_SETVAL=10
STATUS_USER=11

# ******************************************************************************
# Main
main()
{
    [ $# -eq 0 ] && usage && exit ${STATUS_NORMAL}

    short="hvu:bids:"
    long="help,verbose,init,user:,brightness,inc,dec,set:,off"
    args=$(getopt -o "${short}" --long "${long}" --name "${PROG}" -- "${@}")

    [ $? -ne 0 ] && usage && exit ${STATUS_GETOPT}
    eval set -- "${args}"

    # Options
    INITUSER=
    INIT=
    PRINT=
    INCREMENT=
    DECREMENT=
    SET=
    OFF=

    # Parse options
    while true; do
        case "${1}" in
            # Print usage
            -h|--help)
                usage
                exit 0
                ;;

            # Verbose
            -v|--verbose)
                VERBOSE=true
                ;;

            # Set an initial user
            -u|--user)
                shift
                INITUSER="${1}"
                ;;

            # Initialize
            --init)
                check_multi_arg "INIT"
                INIT=true
                ;;

            # Print screen brightness
            -b|--brightness)
                check_multi_arg "PRINT"
                PRINT=true
                ;;

            # Increment screen brightness
            -i|--inc)
                check_multi_arg "INCREMENT"
                INCREMENT=true
                ;;

            # Decrement screen brightness
            -d|--dec)
                check_multi_arg "DECREMENT"
                DECREMENT=true
                ;;

            # Set brightness to given value
            -s|--set)
                shift
                check_multi_arg "SET"
                SET="${1}"
                ;;

            # Turn off monitor
            --off)
                check_multi_arg "OFF"
                OFF=true
                ;;

            # End of options
            --)
                break
                ;;
        esac
        shift
    done

    # Run options
    if [ -n "${INIT}" ]; then
        init_brightness "${INITUSER}"
    elif [ -n "${PRINT}" ]; then
        print_brightness
    elif [ -n "${INCREMENT}" ]; then
        step_brightness_level "+"
        print_brightness
    elif [ -n "${DECREMENT}" ]; then
        step_brightness_level "-"
        print_brightness
    elif [ -n "${SET}" ]; then
        set_brightness_level "${SET}"
        print_brightness
    elif [ -n "${OFF}" ]; then
        xset dpms force off
    else
        :
    fi
}

# ******************************************************************************
# Print program usage
usage()
{
    echo "Usage: ${PROG} [options] [args]"
    echo
    echo "Options:"
    echo "    -h, --help"
    echo "        Print program usage."
    echo
    echo "    -v, --verbose"
    echo "        Verbose output."
    echo
    echo "    --init"
    echo "        Initialize the brightness script for a user."
    echo
    echo "    -u, --user <user>"
    echo "        Set a user to initialize the brightness script for."
    echo
    echo "    -b, --brightness"
    echo "        Print screen brightness."
    echo
    echo "    -i, --inc"
    echo "        Increment screen brightness level."
    echo
    echo "    -d, --dec"
    echo "        Decrement screen brightness level."
    echo
    echo "    -s, --set <value>"
    echo "        Set screen brightness level. Allowed values: [0 - 100]."
    echo
    echo "    --off"
    echo "        Turn off screen."
    echo
    echo "Arguments:"
    echo "    <value>"
    echo "        An integer from [0 - 100]."
    echo
    echo "    <user>"
    echo "        A user to initialize the brightness script for."
}

# ******************************************************************************
# Initialize brightness for a user
init_brightness()
{
    local user="${1}"
    if [ -z "${user}" ]; then
        print_err "Unable to initialize brightness: No user specified."
        exit ${STATUS_USER}
    fi

    print_info "Initializing brightness script..."
    chown "${user}:${user}" "$(get_brightness_file)"
    if [ $? -ne 0 ]; then
        exit ${STATUS_USER}
    fi
    print_info "User '${user}' now able to control brightness."
}

# ******************************************************************************
# Print brightness level
print_brightness()
{
    echo "Brightness: $(get_brightness_percent)%"
}

# ******************************************************************************
# Set the brightness
set_brightness_level()
{
    local value="${1}"

    # Check brightness value
    if ! is_integer "${value}" || [ ${value} -lt 0 -o ${value} -gt 100 ]; then
        print_err "Unable to set brightness: Value must be between 0 - 100."
        exit ${STATUS_SETVAL}
    fi

    # Convert input to brightness value
    local cur=$(get_brightness_value)
    local max=$(get_brightness_max_value)
    local newvalue=$(echo "scale=2; ${value} / 100 * ${max}" \
        | bc | sed 's/\...$//')

    # Set brightness
    echo "${newvalue}" > "$(get_brightness_file)"
}

# ******************************************************************************
# Step brightness level by incrementing/decrementing
step_brightness_level()
{
    local operator="${1}"
    local cur=$(get_brightness_value)
    local max=$(get_brightness_max_value)
    local step=$(echo "scale=2; ${max} / 10" | bc | sed 's/\...$//')
    local newvalue=$(echo "(${cur} ${operator} ${step}) * 100 / ${max}" | bc)
    set_brightness_level "${newvalue}"
}

# ******************************************************************************
# Return screen brightness percentage
get_brightness_percent()
{
    local cur=$(get_brightness_value)
    local max=$(get_brightness_max_value)
    local percent=$(echo "scale=2; ${cur} / ${max} * 100" | bc)
    echo "${percent} / 1" | bc
}

# ******************************************************************************
# Return current brightness
get_brightness_value()
{
    local file="$(get_brightness_file)"
    head -1 "${file}"
}

# ******************************************************************************
# Return current brightness
get_brightness_max_value()
{
    local file="$(get_brightness_max_file)"
    head -1 "${file}"
}

# ******************************************************************************
# Return brightness file
get_brightness_file()
{
    echo "${BRIGHTDIR}/brightness"
}

# ******************************************************************************
# Return max brightness file
get_brightness_max_file()
{
    echo "${BRIGHTDIR}/max_brightness"
}

# ******************************************************************************
# Check if multiple arguments are used when they should not be
check_multi_arg()
{
    case "${1}" in
        INIT)
            if [ -n "${PRINT}" -o -n "${INCREMENT}" -o -n "${DECREMENT}" \
                -o -n "${SET}" -o -n "${OFF}" ]
            then
                print_err "Unable to initialize script: Must specify only one option."
                exit ${STATUS_ARGS}
            fi
            ;;

        PRINT)
            if [ -n "${INIT}" -o -n "${INCREMENT}" -o -n "${DECREMENT}" \
                -o -n "${SET}" -o -n "${OFF}" ]
            then
                print_err "Unable to print brightness level: Must specify only one option."
                exit ${STATUS_ARGS}
            fi
            ;;

        INCREMENT)
            if [ -n "${INIT}" -o -n "${PRINT}" -o -n "${DECREMENT}" \
                -o -n "${SET}" -o -n "${OFF}" ]
            then
                print_err "Unable to increment brightness level: Must specify only one option."
                exit ${STATUS_ARGS}
            fi
            ;;

        DECREMENT)
            if [ -n "${INIT}" -o -n "${PRINT}" -o -n "${INCREMENT}" \
                -o -n "${SET}" -o -n "${OFF}" ]
            then
                print_err "Unable to decrement brightness level: Must specify only one option."
                exit ${STATUS_ARGS}
            fi
            ;;

        SET)
            if [ -n "${INIT}" -o -n "${PRINT}" -o -n "${INCREMENT}" \
                -o -n "${DECREMENT}" -o -n "${OFF}" ]
            then
                print_err "Unable to set brightness level: Must specify only one option."
                exit ${STATUS_ARGS}
            fi
            ;;

        OFF)
            if [ -n "${INIT}" -o -n "${PRINT}" -o -n "${INCREMENT}" \
                -o -n "${DECREMENT}" -o -n "${SET}" ]
            then
                print_err "Unable to turn off screen: Must specify only one option."
                exit ${STATUS_ARGS}
            fi
            ;;

        *)
            ;;
    esac
}

# ******************************************************************************
# Run script
main "${@}"
